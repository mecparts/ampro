;
;	* * * * * * * * * * * * * * * * * * * * * * * * * *
;	*                                                 *
;	*       AMPRO SYSTEM CONFIGURATION UTILITY        *
;	*                                                 *
;	*  COPYRIGHT (C) 1984,85,86 AMPRO COMPUTERS, INC. *
;	*  ALL RIGHTS RESERVED.              *
;	*                                                 *
;	* * * * * * * * * * * * * * * * * * * * * * * * * *
;
VER	EQU	27		; Version number prints in signon message.

;Vers 2.7  swh  9 Aug 21        Changed order of registers in SIO block
;
;Vers 2.6  rbl	5 Feb 86	Show 1772 step rates in main display
;
;Version 2.5	28 Jun 85	Show options on 1770 and 1772 FDC chips.
;
;Version 2.4	18 Jun 85	Always show "4" drives if 3.0+ bios.
;
;Version 2.3	21 May 85	Duplicated step rate logic to support
;				four individual step rates.
;
;Version 2.2	27 Mar 85	Mods to LDTE routine
;
;Version 2.1    22 Feb 85	Added routine to show the floppy drive
;				assignments.
;
;Version 2.0    10 Dec 84	Expanded to allow operation with up to
;				16 Logical disk drives.
;
;				Added code in DSKIO routine to get the
;				data from Track 1 sector 5 for floppies,
;				or from Track 0 sector 45 for hard disk.
;
;				Added test during Get From Disk time to
;				insure that a System is on the target
;				disk.
;
;Version 1.4	7 May 84	: Cleaned up some of the responses, caused
;				   only the characters of interest to be
;				   acted upon eliminating action by control
;				   characters generated by the terminal.
;
;Version 1.3	3 May 84	: Modified to exit on ESC, answer Yes
;				   instead of CR.  Also add 10 ms delay
;				   after LF output to console.
;
;Version 1.2	6 April 84	: Modified CONOUT routine to call BDOS 
;                                  instead of BIOS   
;                                 Added disk written message   

; char equates
CTLC	EQU	3		; control c
ESC	EQU	27		; escape key
CR	EQU	13		; carriage return (^m)
LF	EQU	10		; line feed (^j)
UPCASE	EQU	01011111B	; upper case mask

; bdos equates
BDOS	EQU	5		; bdos entry
RDCON	EQU	10		; read console buffer
CONBUF	EQU	80H		; console buffer

; bios equates
CNIN	EQU	9		; console in
CNOT	EQU	12		; console out

HOM	EQU	24		; disk home
SLDSK	EQU	27		; select disk
STTRK	EQU	30		; set track
STSEC	EQU	33		; set sector
STDMA	EQU	36		; set dma address
READS	EQU	39		; read sector
WRITS	EQU	42		; write sector

IOINT	EQU	57		; initialize i/o

	ORG	100H

START:	LD	SP,STACK
	LD	A,0
	CALL	CGTTBL		; Get table address vers 2.1 >
	LD	(LB$VERS),A
	INC	HL
	LD	A,H		; If < 2.1 then hl=ffff
	OR	L
	LD	A,16		; For 2.1 max 16 drives
	JP	NZ,STNEW
	LD	HL,(1)		; Get NDSKS parameter current
	LD	L,5CH		; Offset
	LD	A,(HL)
STNEW:	ADD	A,'@'		; Set drive letters
	LD	(GDSK1),A
	LD	(PDSK1),A
	INC	A
	LD	(DSK1),A	; And insert to utility
	LD	(DSK2),A
	JP	SIGNON

CGTTBL:	LD	HL,(1)
	LD	L,33H
	JP	(HL)		; For <2.1 does Unlog 
;				 2.1 returns next table address < ffff

LB$GET$LDTE:
	PUSH	AF
	LD	A,(LB$VERS)	; If version 1.x bios
	CP	20
	JP	P,LB$2X
	LD	HL,LB$D		; then point to a dummy floppy unit
	JP	LB$OK
LB$1:	DEFB	1
LB$D:	LD	HL,LB$1
	RET
LB$2X:	CALL	CGTTBL		; otherwise (2.x) get unit from table
	LD	DE,9
	ADD	HL,DE
LB$OK:	POP	AF
	JP	(HL)

DISPLAY$FDEV:
	CALL	CLEARSCREEN
	LD	DE,D$HDR$FDEV	; Print header
	LD	C,9
	CALL	BDOS

	LD	A,0		; starting unit #
D$NEXT$FDEV:
	LD	(UNIT),A
	CALL	LB$GET$LDTE	; Get address of unit id	
	LD	A,(HL)		; Get unit id
	CP	01		; Floppy?
	JP	NZ,D$BUMP$PTR	; No -- go to the next device
	INC	HL		; Get drive #
	LD	A,(HL)		; .
	AND	03H		; mask out excess bits
	LD	L,A		; update floppy device number
	LD	H,0		; .
	ADD	HL,HL		; x2
	EX	DE,HL
	LD	HL,FNAMES	; .
	ADD	HL,DE		; x2
	ADD	HL,DE		; x4
	ADD	HL,DE		; x6
	LD	DE,D$FNAME	; 
	LD	BC,6		; 
	LDIR			;
	LD	A,(UNIT)	; 
	ADD	A,'A'		; 
	LD	(D$CURRENT),A	; 
	LD	DE,D$FDEV$LIN	; and output the line
	LD	C,9
	CALL	BDOS

D$BUMP$PTR:
	LD	A,(UNIT)
	INC	A		; Bump to next unit
	CP	16		; Done yet?
	JP	M,D$NEXT$FDEV	; No -- go do the next one
	RET

UNIT:	DEFB	0

D$HDR$FDEV:
	DEFB	'FLOPPY DISK ASSIGNMENTS:',CR,LF
	DEFB	'CP/M drive   '
	DEFB	'Floppy disk',CR,LF
	DEFB	'------------------------',CR,LF,'$'

D$FDEV$LIN:
	DEFB	' '
D$CURRENT:
	DEFB	'x  '
D$EDISK:DEFB	'   '
D$EBLANK:
	DEFB	'         '
D$FNAME:DEFB	'        '
	DEFB	CR,LF,'$'
D$FDEV$HLEN EQU	$-D$FDEV$LIN	; Line length

FNAMES:	DEFB	'First '
	DEFB	'Second'
	DEFB	'Third '
	DEFB	'Fourth'

LB$VERS:DEFB	0		; Bios version number

CLEARSCREEN:
	LD	B,24		; clear screen
CLSC2:
	LD	A,0DH		; Send carriage return
	CALL	CON$CHR		; .
	LD	A,0AH		; and line feed
	CALL	CON$CHR		; .
	CALL	WAIT		; wait for the s-l-o-w terminals
	DEC	B
	JP	NZ,CLSC2
	RET			; and return

CON$CHR:
	PUSH	BC
	LD	C,2
	LD	E,A
	CALL	BDOS
	POP	BC
	RET

SIGNON:
	CALL	CLEARSCREEN
	CALL	ILPRT
	DEFB	'           AMPRO System Configuration Utility',CR,LF
	DEFB	'     Copyright (c) 1984,85,86 - AMPRO Computers, Inc.',CR,LF
	DEFB	'                       Version '
	DEFB	VER/10+'0','.',VER MOD 10+'0',CR,LF,LF
	DEFB	'With this utility you may view and change the various',CR,LF
	DEFB	'parameters of your AMPRO system.  You will be asked to',CR,LF
	DEFB	'choose to view the current parameters now in memory or',CR,LF
	DEFB	'to view the parameters on a system disk.  You will be',CR,LF
	DEFB	'asked for any changes you might make.  After any changes',CR,LF
	DEFB	'you will be asked whether to install the new parameters',CR,LF
	DEFB	'in memory and/or on a system disk.',CR,LF,LF
	DEFB	'View parameters from Memory or from Disk? (M or D)',CR,LF,LF
	DEFB	'Press <ESC> to quit.  $'

ASK1:	CALL	CONIN		; get the response
	CP	CTLC		; control c?
	JP	Z,EXIT		; quit
	CP	ESC		; escape key?
	JP	Z,EXIT		; quit
	AND	UPCASE		; force upper case
	CP	'M'		; memory?
	JP	Z,XXX
	CP	'D'		; disk?
	JP	NZ,ASK1		; try again

; say 'disk' and ask which
ASKG:	CALL	ILPRT
	DEFB	'Disk$'
ASK2:	LD	A,(LB$VERS)
	CP	20
	CALL	P,DISPLAY$FDEV
ASK222:	CALL	ILPRT
	DEFB	CR,LF,LF,'Which disk shall you read from? (A thru '
GDSK1:	DEFB	'P)  $'
ASK2A:	CALL	CONIN		; get response
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP		; start over
	AND	UPCASE		; force upper case
	CP	'A'
	JP	C,ASK2A		; bad selection, try again
DSK1	EQU	$+1		; Modified for max drive name
	CP	'P'+1
	JP	NC,ASK2A	; bad selection
	LD	C,A		; save for conout
	AND	0FH		; strip ascii
	DEC	A		; adjust rel 0
	LD	(DISK),A	; remember it
	CALL	CONOUT		; to console (echo)
	CALL	GETD		; read the disk

	JP	Z,DISP		; display parms if a good system disk
	CALL	ILPRT		; Issue a message
	DEFB	CR,LF,'There is no system on this disk $'
	JP	ASK222		; And get a new disk to try

XXX:	CALL	ILPRT
	DEFB	'Memory$'
	CALL	GETM		; get parameters from memory

; display the parameters in iobuf
DISP:	CALL	ILPRT
	DEFB	CR,LF,LF,LF,'Configuration Table:'
	DEFB	CR,LF,LF,'Parameter:              Currently:'
	DEFB	CR,LF,LF,'1. Terminal             $'
	LD	A,(IOBYT)
	AND	3
	LD	HL,SPA		; Serial Port A
	JP	NZ,DISP1
	LD	HL,SPB
DISP1:	CALL	PRINT
	CALL	ILPRT
	DEFB	CR,LF,'2. Printer              $'
	LD	A,(IOBYT)
	AND	0C0H		; isolate lst assignment
	CP	0
	LD	HL,SPB		; Serial Port B
	JP	Z,DISP2
	CP	40H
	LD	HL,SPA		; Serial Port A
	JP	Z,DISP2
	LD	HL,PP
DISP2:	CALL	PRINT
	CALL	ILPRT
	DEFB	CR,LF,'3. Max. Floppy Drives   $'
	LD	A,(LB$VERS)
	CP	30
	JP	C,DISP2X
	LD	A,4
	JP	DISP2Y
DISP2X:
	LD	A,(NDSKS)
DISP2Y:
	OR	30H
	LD	C,A
	CALL	CONOUT
	CALL	ILPRT
	DEFB	CR,LF,'4. Step Rate            $'
	LD	A,(STPRAT)
	CALL	DISP2Z
	CALL	ILPRT
	DEFB	', $'
	LD	A,(STPRAT+1)
	CALL	DISP2Z
	CALL	ILPRT
	DEFB	', $'
	LD	A,(STPRAT+2)
	CALL	DISP2Z
	CALL	ILPRT
	DEFB	', $'
	LD	A,(STPRAT+3)
	CALL	DISP2Z
	CALL	ILPRT
	DEFB	' $'
	JP	DISP6A
DISP2Z:
	OR	A
	JP	NZ,DISP3
	CALL	ILPRT
	DEFB	'6ms$'
	JP	DISP6
DISP3:	DEC	A
	JP	NZ,DISP4
	CALL	ILPRT
	DEFB	'12ms$'
	JP	DISP6
DISP4:	DEC	A
	JP	NZ,DISP5
	CALL	ILPRT
	DEFB	'2ms$'
	JP	DISP6
DISP5:	CALL	ILPRT
	DEFB	'3ms$'
DISP6:	RET

DISP6A:
	LD	A,(LB$VERS)
	CP	30		; skip msg if bios 3.0
	JP	NC,DISP6B
	CALL	ILPRT
	DEFB	CR,LF,9,9,'Note: The first step rate is used for all drives'
	DEFB	CR,LF,9,9,'      when using bios 1.x or 2.x',CR,LF,'$'
DISP6B:
	CALL	ILPRT
	DEFB	CR,LF,'5. Autocommand          $'
	LD	HL,AUTOCMD+1
	CALL	PRINT

	CALL	ILPRT
	DEFB	CR,LF,LF,'6. $'
	LD	HL,SPA				; Serial Port A
	CALL	PRINT
	LD	DE,SIOAR5
	CALL	DISP16

	CALL	ILPRT
	DEFB	CR,LF,'                        baud rate       $'
	LD	BC,CT0
	LD	DE,SIOAR4
	CALL	PBAUD

	CALL	ILPRT
	DEFB	CR,LF,'                        hand shake      $'
	LD	A,(HSA)
	OR	A
	LD	HL,N
	JP	Z,DISP15
	LD	HL,Y
DISP15:	CALL	PRINT

	CALL	ILPRT
	DEFB	CR,LF,LF,'7. $'
	LD	HL,SPB
	CALL	PRINT
	LD	DE,SIOBR5
	CALL	DISP16

	CALL	ILPRT
	DEFB	CR,LF,'                        baud rate       $'
	LD	BC,CT1
	LD	DE,SIOBR4
	CALL	PBAUD

	CALL	ILPRT
	DEFB	CR,LF,'                        hand shake      $'
	LD	A,(HSB)
	OR	A
	LD	HL,N
	JP	Z,DISP17
	LD	HL,Y
DISP17:	CALL	PRINT
	CALL	ILPRT
	DEFB	CR,LF,LF,'Any (more) changes? (1 through 7 or No) $'
DSP17A:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	'N'
	JP	Z,FINI
	CP	'n'
	JP	Z,FINI
	CP	'1'
	JP	C,DSP17A
	CP	'8'
	JP	NC,DSP17A
	CP	'7'
	JP	Z,CH7
	CP	'6'
	JP	Z,CH6
	CP	'5'
	JP	Z,CH5
	CP	'4'
	JP	Z,CH4
	CP	'3'
	JP	Z,CH3
	CP	'2'
	JP	Z,CH2
CH1:	CALL	ILPRT
	DEFB	CR,LF,LF,'1. Terminal, Serial port A or Serial port B. (A or B)$'
CH1A:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	AND	UPCASE
	CP	'C'
	JP	NC,CH1A
	CP	'A'
	JP	C,CH1A
	LD	C,1
	JP	Z,CH10
	DEC	C
CH10:	LD	A,(IOBYT)
	AND	0FCH
	OR	C
	LD	(IOBYT),A
	JP	DISP

CH2:	CALL	ILPRT
	DEFB	CR,LF,LF,'2. Printer, Serial port A, Serial port B '
	DEFB	'or Parallel port. (A, B or P)$'
CH2A:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	AND	UPCASE
	CP	'A'
	JP	Z,CH20
	CP	'B'
	JP	Z,CH20
	CP	'P'
	JP	NZ,CH2A
CH20:	CP	'B'
	LD	C,0
	JP	Z,CH21
	CP	'A'
	LD	C,40H
	JP	Z,CH21
	LD	C,80H
CH21:	LD	A,(IOBYT)
	AND	3FH
	OR	C
	LD	(IOBYT),A
	JP	DISP

CH3:	LD	A,(LB$VERS)
	CP	30
	JP	C,CH3X
	CALL	ILPRT
	DEFB	CR,LF,LF,'3. The maximum number of floppy disk '
	DEFB	'drives is preset to four (4)',CR,LF
	DEFB	'in the Ampro BIOS version 3.0 or greater.',CR,LF,LF
	DEFB	'Press the RETURN key to continue - ','$'
CH3R:
	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,DISP
	JP	CH3R

CH3X:
	CALL	ILPRT
	DEFB	CR,LF,LF,'3. Max. drives. (1, 2, 3 or 4)$'
CH3A:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	'1'
	JP	C,CH3A
	CP	'5'
	JP	NC,CH3A
	AND	0FH
	LD	(NDSKS),A
	JP	DISP

CH4:	CALL	ILPRT
	DEFB	CR,LF,LF,'4. Step rates for each floppy drive '
	DEFB	'(in milliseconds).',CR,LF,LF
	DEFB	'Choices:  1770  1772',CR,LF
	DEFB	'   1  --   6ms   6ms',CR,LF
	DEFB	'   2  --  12ms  12ms',CR,LF
	DEFB	'   3  --  20ms   2ms',CR,LF
	DEFB	'   4  --  30ms   3ms',CR,LF
	DEFB	'$'
	CALL	ILPRT
	DEFB	CR,LF,'First  floppy drive rate (1-4): $'
CH4A:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH42A
	CP	'1'
	LD	C,0
	JP	Z,CH41A
	CP	'2'
	LD	C,1
	JP	Z,CH41A
	CP	'3'
	LD	C,2
	JP	Z,CH41A
	CP	'4'
	LD	C,3
	JP	NZ,CH4A
CH41A:
	PUSH	AF
	LD	A,C
	LD	(STPRAT),A
	POP	AF
	LD	C,A
	CALL	CONOUT
CH42A:

	CALL	ILPRT
	DEFB	CR,LF,'Second floppy drive rate (1-4): $'
CH4B:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH42B
	CP	'1'
	LD	C,0
	JP	Z,CH41B
	CP	'2'
	LD	C,1
	JP	Z,CH41B
	CP	'3'
	LD	C,2
	JP	Z,CH41B
	CP	'4'
	LD	C,3
	JP	NZ,CH4B
CH41B:
	PUSH	AF
	LD	A,C
	LD	(STPRAT+1),A
	POP	AF
	LD	C,A
	CALL	CONOUT
CH42B:

	CALL	ILPRT
	DEFB	CR,LF,'Third  floppy drive rate (1-4): $'
CH4C:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH42C
	CP	'1'
	LD	C,0
	JP	Z,CH41C
	CP	'2'
	LD	C,1
	JP	Z,CH41C
	CP	'3'
	LD	C,2
	JP	Z,CH41C
	CP	'4'
	LD	C,3
	JP	NZ,CH4C
CH41C:
	PUSH	AF
	LD	A,C
	LD	(STPRAT+2),A
	POP	AF
	LD	C,A
	CALL	CONOUT
CH42C:

	CALL	ILPRT
	DEFB	CR,LF,'Foruth floppy drive rate (1-4): $'
CH4D:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH42D
	CP	'1'
	LD	C,0
	JP	Z,CH41D
	CP	'2'
	LD	C,1
	JP	Z,CH41D
	CP	'3'
	LD	C,2
	JP	Z,CH41D
	CP	'4'
	LD	C,3
	JP	NZ,CH4D
CH41D:
	PUSH	AF
	LD	A,C
	LD	(STPRAT+3),A
	POP	AF
	LD	C,A
	CALL	CONOUT
CH42D:
	JP	DISP

CH5:	CALL	ILPRT
	DEFB	CR,LF,LF,'5. Autocommand.  Command file to be executed '
	DEFB	'on cold boot.  $'
	LD	DE,CONBUF
	LD	A,8
	LD	(DE),A
	LD	C,RDCON
	CALL	BDOS
	LD	HL,CONBUF+1
	LD	E,(HL)
	LD	D,0
	ADD	HL,DE
	INC	HL
	LD	(HL),0
	LD	HL,CONBUF+1
	LD	DE,AUTOCMD
	LD	BC,10
	LDIR
	JP	DISP

CH6:	CALL	ILPRT
	DEFB	CR,LF,LF,'Serial port A configuration'
	DEFB	CR,LF,LF,'Data bits.  (5, 6, 7 or 8) $'
CH6A:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH6B		; next
	CP	'5'
	JP	C,CH6A		; again
	CP	'9'
	JP	NC,CH6A
	CP	'8'
	LD	C,60H
	JP	Z,CH60
	CP	'7'
	LD	C,20H
	JP	Z,CH60
	CP	'6'
	LD	C,40H
	JP	Z,CH60
	LD	C,0		; 5 bits
CH60:	LD	HL,SIOAR5
	LD	A,(HL)		; wr5 info
	AND	9FH		; mask
	OR	C		; add selection
	LD	(HL),A		; store it
	LD	A,C
	RLA
	LD	C,A		; shift selection left
	LD	HL,SIOAR3
	LD	A,(HL)		; wr3 info
	AND	3FH		; mask
	OR	C
	LD	(HL),A		; store it
CH6B:	CALL	ILPRT
	DEFB	CR,LF,LF,'Stop bits.  A=1, B=1.5, C=2. (A, B or C)$'
CH6BA:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH6C
	AND	UPCASE
	CP	'A'
	JP	C,CH6BA
	CP	'D'
	JP	NC,CH6BA
	CP	'A'
	LD	C,4
	JP	Z,CH6B1
	CP	'B'
	LD	C,8
	JP	Z,CH6B1
	LD	C,0CH
CH6B1:	LD	HL,SIOAR4
	LD	A,(HL)		; wr4 info
	AND	0F3H		; mask
	OR	C
	LD	(HL),A		; store new info

CH6C:	CALL	ILPRT
	DEFB	CR,LF,LF,'Parity.  Odd, Even or None.  (O, E or N) $'
CH6CA:	CALL	CONIN
	CP	CR
	JP	Z,CH6D
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	AND	UPCASE
	CP	'O'
	LD	C,1
	JP	Z,CH6C0
	CP	'E'
	LD	C,3
	JP	Z,CH6C0
	CP	'N'
	LD	C,0
	JP	NZ,CH6CA
CH6C0:	LD	HL,SIOAR4
	LD	A,(HL)		; wr4 info
	AND	0FCH		; mask
	OR	C
	LD	(HL),A		; store it

CH6D:	CALL	ILPRT
	DEFB	CR,LF,LF,'Baud rates:'
	DEFB	CR,LF,'0. 110                  5. 2400'
	DEFB	CR,LF,'1. 300                  6. 4800'
	DEFB	CR,LF,'2. 450                  7. 9600'
	DEFB	CR,LF,'3. 600                  8. 19200'
	DEFB	CR,LF,'4. 1200                 9. 38400'
	DEFB	CR,LF,LF,'Choose one.  (0 through 9) $'

CH6DA:	CALL	CONIN
	CP	CR
	JP	Z,CH6E
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	':'
	JP	NC,CH6DA
	CP	'0'
	JP	C,CH6DA
	JP	Z,B110
	CP	'1'
	JP	Z,B300
	CP	'2'
	JP	Z,B450
	CP	'3'
	JP	Z,B600
	CP	'4'
	JP	Z,B1200
	CP	'5'
	JP	Z,B2400
	CP	'6'
	JP	Z,B4800
	CP	'7'
	JP	Z,B9600
	CP	'8'
	JP	Z,B19200
B38400:	LD	HL,CT0		; put CTC0 in reset
	LD	A,3
	LD	(HL),A
	INC	HL
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	40H		; 16x clock
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	AND	7FH		; turn dtr off (enable hi baud)
	LD	(HL),A
	JP	CH6E

B19200:	LD	HL,CT0		; put CTC0 in reset
	LD	A,3
	LD	(HL),A
	INC	HL
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	80H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	AND	7FH		; turn dtr off (enable hi baud)
	LD	(HL),A
	JP	CH6E

B9600:	LD	HL,CT0
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,13
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH6E

B4800:	LD	HL,CT0
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,26
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH6E

B2400:	LD	HL,CT0
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,52
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH6E

B1200:	LD	HL,CT0
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,104
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH6E

B600:	LD	HL,CT0
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,208
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH6E

B450:	LD	HL,CT0
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,139
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	80H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH6E

B300:	LD	HL,CT0
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,208
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	80H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH6E

B110:	LD	HL,CT0
	LD	A,7H
	LD	(HL),A
	INC	HL
	LD	A,71
	LD	(HL),A
	LD	HL,SIOAR4
	LD	A,(HL)
	AND	3FH
	OR	80H
	LD	(HL),A
	LD	HL,SIOAR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A

CH6E:	CALL	ILPRT
	DEFB	CR,LF,LF,'Hand shake?  (Yes or No) $'
CH6EA:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	CR
	JP	Z,DISP
	AND	UPCASE
	CP	'Y'
	LD	C,1
	JP	Z,CH6E1
	CP	'N'
	LD	C,0
	JP	NZ,CH6EA
CH6E1:	LD	A,C
	LD	(HSA),A
	JP	DISP

	
CH7:	CALL	ILPRT
	DEFB	CR,LF,LF,'Serial port B configuration'
	DEFB	CR,LF,LF,'Data bits.  (5, 6, 7 or 8) $'
CH7A:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT		; quit
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH7B		; next
	CP	'5'
	JP	C,CH7A		; again
	CP	'9'
	JP	NC,CH7A
	CP	'8'
	LD	C,60H
	JP	Z,CH70
	CP	'7'
	LD	C,20H
	JP	Z,CH70
	CP	'6'
	LD	C,40H
	JP	Z,CH70
	LD	C,0		; 5 bits
CH70:	LD	HL,SIOBR5
	LD	A,(HL)		; wr5 info
	AND	9FH		; mask
	OR	C		; add selection
	LD	(HL),A		; store it
	LD	A,C
	RLA
	LD	C,A		; shift selection left
	LD	HL,SIOBR3
	LD	A,(HL)		; wr3 info
	AND	3FH		; mask
	OR	C
	LD	(HL),A		; store it
CH7B:	CALL	ILPRT
	DEFB	CR,LF,LF,'Stop bits.  A=1, B=1.5, C=2. (A, B or C)$'
CH7BA:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	CR
	JP	Z,CH7C
	AND	UPCASE
	CP	'A'
	JP	C,CH7BA
	CP	'D'
	JP	NC,CH7BA
	CP	'A'
	LD	C,4
	JP	Z,CH7B1
	CP	'B'
	LD	C,8
	JP	Z,CH7B1
	LD	C,0CH
CH7B1:	LD	HL,SIOBR4
	LD	A,(HL)		; wr4 info
	AND	0F3H		; mask
	OR	C
	LD	(HL),A		; store new info

CH7C:	CALL	ILPRT
	DEFB	CR,LF,LF,'Parity.  Odd, Even or None.  (O, E or N) $'
CH7CA:	CALL	CONIN
	CP	CR
	JP	Z,CH7D
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	AND	UPCASE
	CP	'O'
	LD	C,1
	JP	Z,CH7C0
	CP	'E'
	LD	C,3
	JP	Z,CH7C0
	CP	'N'
	LD	C,0
	JP	NZ,CH7CA
CH7C0:	LD	HL,SIOBR4
	LD	A,(HL)		; wr4 info
	AND	0FCH		; mask
	OR	C
	LD	(HL),A		; store it

CH7D:	CALL	ILPRT
	DEFB	CR,LF,LF,'Baud rates:'
	DEFB	CR,LF,'0. 110                  5. 2400'
	DEFB	CR,LF,'1. 300                  6. 4800'
	DEFB	CR,LF,'2. 450                  7. 9600'
	DEFB	CR,LF,'3. 600'
	DEFB	CR,LF,'4. 1200'
	DEFB	CR,LF,LF,'Choose one.  (0 through 7) $'

CH7DA:	CALL	CONIN
	CP	CR
	JP	Z,CH7E
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	CP	'8'
	JP	NC,CH7DA
	CP	'0'
	JP	C,CH7DA
	JP	Z,BB110
	CP	'1'
	JP	Z,BB300
	CP	'2'
	JP	Z,BB450
	CP	'3'
	JP	Z,BB600
	CP	'4'
	JP	Z,BB1200
	CP	'5'
	JP	Z,BB2400
	CP	'6'
	JP	Z,BB4800

BB9600:	LD	HL,CT1
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,13
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH7E

BB4800:	LD	HL,CT1
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,26
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH7E

BB2400:	LD	HL,CT1
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,52
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH7E

BB1200:	LD	HL,CT1
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,104
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH7E

BB600:	LD	HL,CT1
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,208
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	40H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH7E

BB450:	LD	HL,CT1
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,139
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	80H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH7E

BB300:	LD	HL,CT1
	LD	A,47H
	LD	(HL),A
	INC	HL
	LD	A,208
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	80H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	JP	CH7E

BB110:	LD	HL,CT1
	LD	A,7H
	LD	(HL),A
	INC	HL
	LD	A,71
	LD	(HL),A
	LD	HL,SIOBR4
	LD	A,(HL)
	AND	3FH
	OR	80H
	LD	(HL),A
	LD	HL,SIOBR5
	LD	A,(HL)
	OR	80H
	LD	(HL),A

CH7E:	CALL	ILPRT
	DEFB	CR,LF,LF,'Hand shake?  (Yes or No) $'
CH7EA:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	CR
	JP	Z,DISP
	AND	UPCASE
	CP	'Y'
	LD	C,1
	JP	Z,CH7E1
	CP	'N'
	LD	C,0
	JP	NZ,CH7EA
CH7E1:	LD	A,C
	LD	(HSB),A
	JP	DISP

DISP16:	CALL	ILPRT
	DEFB	'        data bits       $'
	LD	A,(DE)		; wr5 info
	AND	60H		; mask
	CP	60H		; 8 bits
	LD	C,'8'
	JP	Z,DISP7
	CP	20H		; 7 bits
	LD	C,'7'
	JP	Z,DISP7
	CP	40H		; 6 bits
	LD	C,'6'
	JP	Z,DISP7
	LD	C,'5'
DISP7:	CALL	CONOUT

	CALL	ILPRT
	DEFB	CR,LF,'   configuration        stop bits       $'
	DEC	DE		; DE is pointing at SIOxR5
	DEC	DE
	DEC	DE
	DEC	DE		; now pointing AT SIOxR4
	LD	A,(DE)		; wr4 info
	AND	0CH		; mask
	CP	8
	JP	NZ,DISP8
	CALL	ILPRT
	DEFB	'1.5$'
	JP	DISP10
DISP8:	CP	4
	LD	C,'1'
	JP	Z,DISP9
	LD	C,'2'
DISP9:	CALL	CONOUT

DISP10:	CALL	ILPRT
	DEFB	CR,LF,'                        parity          $'
	LD	A,(DE)		; wr4 info
	AND	3		; mask
	CP	1
	LD	HL,ODD
	JP	Z,DISP12
	CP	3
	LD	HL,EVEN
	JP	Z,DISP12
	LD	HL,NONE
DISP12:	JP	PRINT

FINI:	CALL	ILPRT
	DEFB	CR,LF,LF,'Install changes in Memory or on Disk?  (M or D)'
	DEFB	CR,LF,'Press <ESC> to exit.$'
FINIA:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,EXIT
	AND	UPCASE
	CP	'M'
	JP	Z,PUTMEM
	CP	'D'
	JP	Z,PUTDSK
	JP	FINIA

PUTMEM:	CALL	PUTM
	CALL	IOINIT
	CALL	ILPRT
	DEFB	CR,LF,LF,'Changes installed in memory.$'
	JP	FINI

PUTDSK:	LD	A,(LB$VERS)
	CP	20
	CALL	P,DISPLAY$FDEV
PDSK0:	CALL	ILPRT
	DEFB	CR,LF,LF,'Install changes on which disk?  (A thru '
PDSK1:	DEFB	'P)  $'

PTDSKA:	CALL	CONIN
	CP	CTLC
	JP	Z,EXIT
	CP	ESC
	JP	Z,DISP
	AND	UPCASE
	CP	'A'
	JP	C,PTDSKA
DSK2	EQU	$+1		; MODIFIED
	CP	'P'+1
	JP	NC,PTDSKA
	PUSH	AF
	LD	C,A
	CALL	CONOUT
	POP	AF
	LD	(PDSK),A
	AND	0FH
	DEC	A
	LD	(DISK),A
	CALL	PUTD
	JP	NZ,FINI		; In case disk error
	CALL	ILPRT
	DEFB	CR,LF,LF,'Changes installed on disk '
PDSK:	DEFB	'A$'
	JP	FINI


; print the baud rate
; bc points to ctc init string, de points to sio init string
PBAUD:	LD	A,(BC)		; get first ctc byte
	CP	3		; reset?
	JP	Z,DISP13
	CP	47H
	LD	HL,B1
	JP	NZ,DISP14	; must be 7, print 110 baud
	INC	BC		; point to second byte of ctc string
	LD	A,(BC)
	CP	13
	LD	HL,B96
	JP	Z,DISP14	; print 9600 baud
	CP	26
	LD	HL,B48
	JP	Z,DISP14
	CP	52
	LD	HL,B24
	JP	Z,DISP14
	CP	104
	LD	HL,B12
	JP	Z,DISP14
	CP	208
	LD	HL,B4
	JP	NZ,DISP14
	LD	A,(DE)		; wr4 info
	AND	0C0H		; mask
	CP	40H
	LD	HL,B6
	JP	Z,DISP14
	LD	HL,B3
	JP	DISP14
DISP13:	LD	A,(DE)		; wr4 info
	AND	0C0H
	CP	40H
	LD	HL,B384
	JP	Z,DISP14
	LD	HL,B192
DISP14:	JP	PRINT		; print returns to caller	



; get parameters from memory
GETM:	LD	HL,(1)		; bios address
	LD	L,64		; parameters start here
	LD	DE,IOBUF	; and go here
	LD	BC,IOBUF$LNG
	LDIR			; move it
	RET

; put parameters in memory
PUTM:	LD	HL,(1)		; bios address
	LD	L,64		; parms go here
	EX	DE,HL		; in de
	LD	HL,IOBUF	; parms from here
	LD	BC,IOBUF$LNG
	LDIR			; move it
	RET

; get parameters from disk
GETD:	LD	A,1
	LD	(TRACK),A	; track 1
	LD	(RDOP),A	; this is a read
	LD	A,5
	LD	(SECTOR),A	; bios starts here
	CALL	DSKIO
				; read it

; check to see if the system is really here...

	LD	HL,BUFFER
	LD	DE,3
	LD	BC,17		; Test for 17 C3 bytes
GETD0:
	LD	A,(HL)		; Calculate check sum on Jump table
	OR	B
	LD	B,A
	ADD	HL,DE
	DEC	C
	JP	NZ,GETD0
	LD	A,B
	CP	0C3H		; If any other bit is an error
	RET	NZ
GETD1:
	LD	HL,BUFFER+64	; from second half of buffer
	LD	DE,IOBUF	;  to io buffer
	LD	BC,IOBUF$LNG
	LDIR			; move it
	RET

; put parameters on disk
PUTD:	LD	A,(DISK)
	CALL	LB$GET$LDTE
	LD	A,(HL)
	OR	A
	JP	NZ,PUTDOK
	CALL	ILPRT
	DEFB	CR,LF,LF,'No disk at this letter ',CR,LF,'$'
	LD	A,0FFH
	OR	A
	RET
PUTDOK:	LD	A,1
	LD	(TRACK),A
	LD	(RDOP),A	; read first
	LD	A,5
	LD	(SECTOR),A
	CALL	DSKIO		; do the read
	LD	HL,IOBUF	; parms from here
	LD	DE,BUFFER+64	;  to here
	LD	BC,IOBUF$LNG
	LDIR			; move it
	XOR	A
	LD	(RDOP),A	; write
	CALL	DSKIO		; Do the write
	OR	A
	RET	Z
	CALL	ILPRT
	DEFB	CR,LF,LF,'Disk Write Error ',CR,LF,'$'
	LD	A,0FFH
	OR	A		; Set nz on return
	RET


; reads or writes one sector of the disk
DSKIO:	LD	A,(DISK)	; chosen disk
	CALL	LB$GET$LDTE
	LD	A,(HL)
	OR	A
	RET	Z
	LD	A,(DISK)
	LD	C,A
	LD	E,0		; new mount, get new dpb
	CALL	SELDSK		; select the disk
	LD	DE,10		; OFFSET TO CURRENT DPB
	ADD	HL,DE
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	LD	A,(HL)		; THIS IS THE SECTOR PER TRACK
	CP	64		; IF NOT 64 THEN IS TRK 1 SECT 5 
	JP	NZ,DSKIF	;  NO THEN USE FLOPPY VALUES
	LD	A,45		; SET TRACK 0 SECTOR 45 FOR HARD DISK
	LD	(SECTOR),A
	XOR	A		; AND TRACK 0
	LD	(TRACK),A
DSKIF:
	CALL	HOME		; reset hstact flag, forces readhst
	LD	A,(TRACK)	; chosen track
	LD	C,A
	CALL	SETTRK
	LD	A,(SECTOR)	; chosen sector
	LD	C,A
	CALL	SETSEC
	LD	BC,BUFFER	; all reads and writes to/from here
	CALL	SETDMA
	LD	A,(RDOP)	; read operation flag
	OR	A
	JP	Z,WRIT		; must be write
	JP	READ		; read returns to caller
WRIT:	LD	C,1		; force pre-read and write
	JP	WRITE		; write returns to caller

; prints the string pointed to by hl
PRINT:	LD	A,(HL)		; get a byte
	INC	HL		; bump pointer
	CP	'$'		; terminator?
	RET	Z		; yes, return
	CP	0
	RET	Z
	AND	7FH		; force ascii
	PUSH	AF
	LD	C,A
	CALL	CONOUT		; to console
	POP	AF
	CP	LF
	CALL	Z,WAIT		; wait 10 ms after line feed
	JP	PRINT		; again

; prints the string folloing the call to ilprt
ILPRT:	EX	(SP),HL		; point hl to next byte
	CALL	PRINT
	EX	(SP),HL		; put next address on stack
	RET

WAIT:	PUSH	BC
	LD	BC,10 * 167	; wait x (* 167) milliseconds
WT0:	DEC	BC
	LD	A,B
	OR	C
	JP	NZ,WT0
	POP	BC
	RET

CONOUT:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	E,C
	LD	C,2
	CALL	5
	POP	BC
	POP	DE
	POP	HL
	RET

; direct bios calls
CONIN:	LD	A,CNIN
	JP	BIOS

HOME:	LD	A,HOM
	JP	BIOS

SELDSK:	LD	A,SLDSK
	JP	BIOS

SETTRK:	LD	A,STTRK
	JP	BIOS

SETSEC:	LD	A,STSEC
	JP	BIOS

SETDMA:	LD	A,STDMA
	JP	BIOS

READ:	LD	A,READS
	JP	BIOS

WRITE:	LD	A,WRITS
	JP	BIOS

IOINIT:	LD	A,IOINT

BIOS:	LD	HL,(1)
	LD	L,A
	JP	(HL)

EXIT:	JP	0

; 'stubs' for testing, to be removed later
T1:	CALL	ILPRT
	DEFB	'T1',CR,LF,'$'
	RET
T2:	CALL	ILPRT
	DEFB	'T2',CR,LF,'$'
	RET
T3:	CALL	ILPRT
	DEFB	'T3',CR,LF,'$'
	RET

DISK:	DEFB	2		; disk c:
TRACK:	DEFB	1
SECTOR:	DEFB	5
RDOP:	DEFB	1		; read operation

SPA:	DEFB	'Serial Port A$'
SPB:	DEFB	'Serial Port B$'
PP:	DEFB	'Parallel Port$'
ODD:	DEFB	'odd$'
EVEN:	DEFB	'even$'
NONE:	DEFB	'none$'
B384:	DEFB	'38400$'
B192:	DEFB	'19200$'
B96:	DEFB	'9600$'
B48:	DEFB	'4800$'
B24:	DEFB	'2400$'
B12:	DEFB	'1200$'
B6:	DEFB	'600$'
B4:	DEFB	'450$'
B3:	DEFB	'300$'
B1:	DEFB	'110$'
Y:	DEFB	'yes$'
N:	DEFB	'no$'

BUFFER	EQU	$ + 7FH AND 0FF80H ; at sector boundary for readability
	ORG	BUFFER
	DEFS	128
IOBUF:
CT0:	DEFS	2
CT1:	DEFS	2
CT2:	DEFS	2
CT3:	DEFS	2

SIOA:	DEFS	2
SIOAR4:	DEFS	1
	DEFS	1
SIOAR3:	DEFS	1
	DEFS	1
SIOAR5:	DEFS	1
	DEFS	1
SIOAR1:	DEFS	1

SIOB:	DEFS	2
SIOBR2:	DEFS	1
	DEFS	1
SIOBR4:	DEFS	1
	DEFS	1
SIOBR3:	DEFS	1
	DEFS	1
SIOBR5:	DEFS	1
	DEFS	1
SIOBR1:	DEFS	1

NDSKS:	DEFS	1
STPRAT:	DEFS	4
IOBYT:	DEFS	1
AUTOCMD:DEFS	10
HSA:	DEFS	1
HSB:	DEFS	1
IOBUF$LNG	EQU	$-IOBUF

	DEFS	32
STACK:	END START


